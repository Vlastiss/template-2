rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    function isTeamMember(teamId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid + '_' + teamId)) &&
        get(/databases/$(database)/documents/teamMembers/$(request.auth.uid + '_' + teamId)).data.status == 'active';
    }
    
    function isTeamAdmin(teamId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/teamMembers/$(request.auth.uid + '_' + teamId)) &&
        (get(/databases/$(database)/documents/teamMembers/$(request.auth.uid + '_' + teamId)).data.role == 'admin' ||
         get(/databases/$(database)/documents/teamMembers/$(request.auth.uid + '_' + teamId)).data.role == 'owner');
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && (request.auth.uid == userId || request.auth.token.admin == true);
    }

    // Team rules
    match /teams/{teamId} {
      allow read: if isTeamMember(teamId);
      allow create: if isSignedIn();
      allow update, delete: if isTeamAdmin(teamId);
      
      // Nested collections within teams
      match /{document=**} {
        allow read: if isTeamMember(teamId);
        allow write: if isTeamAdmin(teamId);
      }
    }
    
    // Team member rules
    match /teamMembers/{memberId} {
      allow read: if isSignedIn() && (
        resource.data.userId == request.auth.uid ||
        isTeamAdmin(resource.data.teamId)
      );
      allow create: if isTeamAdmin(resource.data.teamId);
      allow update, delete: if isTeamAdmin(resource.data.teamId);
    }

    // Job rules - ensure jobs are team-scoped
    match /jobs/{jobId} {
      allow read: if isTeamMember(resource.data.teamId);
      allow create: if isTeamMember(request.resource.data.teamId);
      allow update: if isTeamMember(resource.data.teamId);
      allow delete: if isTeamAdmin(resource.data.teamId);
    }

    // Verification tokens collection
    match /verificationTokens/{tokenId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid;
    }

    // Allow admins to read and write all documents
    match /{document=**} {
      allow read, write: if request.auth.token.admin == true;
    }
  }
} 